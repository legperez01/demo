name: Build and Push to Docker Hub

on:
  release:
    types: [prereleased]

env:
  PROJECT_NAME: ${{vars.PROJECT_NAME}}
  PROJECT_VERSION: ${{github.ref_name}}
  REPOSITORY_OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: "${{vars.DOCKER_REGISTRY}}/${{vars.PROJECT_NAME}}:${{github.ref_name}}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GH_TOKEN }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      - name: Build Native Image
        run: ./gradlew clean bootBuildImage --imageName=$IMAGE_NAME  --publishImage -PregistryUsername=${{ secrets.DOCKER_REGISTRY_USERNAME }} -PregistryToken=${{ secrets.DOCKER_REGISTRY_PASSWORD }}

  config:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Use config repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPOSITORY_OWNER }}/k8s-fitworld
          ref: master
          token: ${{ secrets.GH_TOKEN }}
      - name: Update version
        run: |
          cd dev
          OLD_IMAGE_NAME=$(cat $PROJECT_NAME.yml | grep image: | awk '{print $2}')
          echo Current Image: $OLD_IMAGE_NAME
          sed -i "s;$OLD_IMAGE_NAME;$IMAGE_NAME;" $PROJECT_NAME.yml
          echo New Image: $(cat $PROJECT_NAME.yml | grep image: | awk '{print $2}')
      - name: Commit and Push
        run: |
          git status
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git add dev/$PROJECT_NAME.yml
          git commit -m "updating version to $PROJECT_VERSION"
          git push